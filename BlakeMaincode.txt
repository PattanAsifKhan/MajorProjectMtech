/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blake;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void test() {
        File f = new File("C:/Users/hp/Desktop/res/blake2stest.txt");
        try {
            Scanner s = new Scanner(f);
            while (s.hasNext()) {
                s.next(); 
                String input = s.next();
                s.next(); 
                String expectedOutput = s.next();
                byte[] in = hexStringToByteArray(input);
                Blake2s blake2s = new Blake2s(null, null);
                blake2s.update(in, null, null);
                byte[] digest = blake2s.digest();
                byte[] expected = hexStringToByteArray(expectedOutput);
                if (Arrays.equals(digest, expected)) {
                    System.out.println("good");
                } else {
                    System.err.println("bad");
                    System.err.println("input: " + input);
                    System.err.println("expected: " + expectedOutput);
                    System.err.println("found: " + byteArrayToHexString(digest));
                }
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
            return;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void testKeyed() {
        File f = new File("C:/Users/hp/Desktop/res/blake2stestkey.txt");
        try {
            Scanner s = new Scanner(f);
            boolean isFirstInput = true;
            while (s.hasNext()) {
                s.next(); //in
                String input;
                if (isFirstInput) {
                    isFirstInput = false;
                    input = null;
                } else {
                    input = s.next();
                }
                byte[] in = input == null ? new byte[0] : hexStringToByteArray(input);
                s.next(); //key
                String key = s.next();
                s.next(); //out
                String expectedOutput = s.next();
                Blake2s blake2s = new Blake2s(null, hexStringToByteArray(key));
                blake2s.update(in, null, null);
                byte[] digest = blake2s.digest();
                byte[] expected = hexStringToByteArray(expectedOutput);
                if (Arrays.equals(digest, expected)) {
                    System.out.println("good");
                    System.err.println(byteArrayToHexString(digest));

   
                } else {
                    System.err.println("bad");
                    System.err.println("input: " + input);
                    System.err.println("expected: " + expectedOutput);
                    System.err.println("found: " + byteArrayToHexString(digest));
                }
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
            return;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void dump(byte[] s) {
        for (byte b : s) {
            System.out.print((int) (b & 0xFF));
        }
        System.out.print("\n");
    }

    public static byte[] hexStringToByteArray(String s) {
        int len = s.length();
        byte[] data = new byte[len / 2];
        for (int i = 0; i < len; i += 2) {
            data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4)
                    + Character.digit(s.charAt(i + 1), 16));
        }
        return data;
    }

    public static String byteArrayToHexString(byte[] b) {
        int len = b.length;
        String data = new String();

        for (int i = 0; i < len; i++){
            data += Integer.toHexString((b[i] >> 4) & 0xf);
            data += Integer.toHexString(b[i] & 0xf);
        }
        return data;
    }
    public static void main(String Args[]){
    test();
    testKeyed();
    
    }
}